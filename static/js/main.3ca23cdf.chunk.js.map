{"version":3,"sources":["App.js","index.js"],"names":["App","useState","latest","setlatest","results","setResults","searchCountries","setSearchCountries","useEffect","axios","all","get","then","resArr","console","log","data","catch","err","lastupdated","Date","parseInt","updated","toString","sort","a","b","cases","countires","filter","item","country","toLowerCase","includes","map","i","Card","key","bg","text","className","style","margin","Img","variant","src","countryInfo","flag","height","width","Body","Title","Text","deaths","recovered","todayCases","todayDeaths","active","critical","Footer","backgroundColor","textAlign","color","fontSize","CardDeck","Form","Group","controlId","Control","type","placeholder","onChange","e","target","value","queries","columns","query","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ca23cdf.chunk.js","sourcesContent":["import React,  {useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from  'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport Columns from 'react-columns';\nimport Form from 'react-bootstrap/Form';\nimport './App.css';\n\n\n\nfunction App() {\n\n // Setting states\n const [latest, setlatest] = useState([]);\n const [results, setResults] = useState([]);\n const [searchCountries , setSearchCountries] = useState(\"\");\n\n\n\n\n //Fetching API from its Endpoint\nuseEffect(()=>{\n  axios\n  .all([\n  axios.get(\"https://disease.sh/v2/all\"),\n  axios.get(\"https://disease.sh/v2/countries\")\n  //axios.get(\"https://corona.lmao.ninja/docs\")\n])\n\n  .then(resArr =>{\n    console.log(resArr[1].data);\n    setlatest(resArr[0].data);\n    setResults(resArr[1].data);\n  })\n\n  .catch(err => {\n    console.log(err);\n  });\n\n},[])\n\n\nconst date = new Date(parseInt(latest.updated));\nconst lastupdated = date.toString();\n\n results.sort((a,b)=> {\nreturn b.cases - a.cases;\n})\n\n\nconst filterCountries = results.filter(item =>{\n  return    searchCountries !== \"\" ? item.country.toLowerCase().includes(searchCountries.toLowerCase())\n   : item;\n});\n\n\n\n\n\nconst countires = filterCountries.map(((data, i) =>{\n  //const max = data.cases  data.countryInfo.flag\n  return(\n<Card  key={i}  bg='light' text='dark' className='text-center' style={{margin:\"10px\"}}>\n<Card.Img variant=\"top\" src={data.countryInfo.flag} style={{height:\"180px\", width:\"80%\" , margin:\"0 auto\"}} />\n    <Card.Body>\n      <Card.Title>{data.country }</Card.Title>\n      <Card.Text>Cases: {data.cases}</Card.Text>\n      <Card.Text>Deaths: {data.deaths}</Card.Text>\n      <Card.Text>Recovered: {data.recovered}</Card.Text>\n      <Card.Text>Today's cases: {data.todayCases}</Card.Text>\n      <Card.Text>Today's Deaths: {data.todayDeaths}</Card.Text>\n      <Card.Text>Active: {data.active}</Card.Text>\n      <Card.Text>Critical: {data.critical}</Card.Text>\n\n    </Card.Body>\n    <Card.Footer>\n      <small >Last updated {lastupdated}</small>\n    </Card.Footer>\n\n</Card>\n\n\n  );\n}));\n\nvar queries = [{\n  columns: 2,\n  query: 'min-width: 500px'\n}, {\n  columns: 3,\n  query: 'min-width: 1000px'\n}];\n\n\n\n  return (\n    <div>\n    <header style={{width:\"100%\", height:\"120px\", backgroundColor:\"#6b0b0b\",\n     textAlign:\"center\",color:\"white\", fontSize:\"2rem\"}}>\n   Created by: Ali Nosratipour\n    </header>\n     <CardDeck>\n  <Card bg='secondary' text='white' className='text-center' style={{margin:\"10px\"}}>\n    \n      <Card.Body>\n        <Card.Title>Cases</Card.Title>\n        <Card.Text className='amar'  >{latest.cases}</Card.Text>\n      </Card.Body>\n      <Card.Footer>\n        <small >Last updated {lastupdated}</small>\n      </Card.Footer>\n\n  </Card>\n  <Card bg='danger' text='white' className='text-center' style={{margin:\"10px\"}} >\n  \n    <Card.Body>\n      <Card.Title>Deaths</Card.Title>\n      <Card.Text className='amar' > {latest.deaths}</Card.Text>\n    </Card.Body>\n\n    <Card.Footer>\n      <small >Last updated {lastupdated}</small>\n    </Card.Footer>\n  </Card>\n  <Card bg='success' text='white' className='text-center' style={{margin:\"10px\"}} >\n\n    <Card.Body>\n      <Card.Title>Recoverd</Card.Title>\n      <Card.Text className='amar'>{latest.recovered}</Card.Text>\n     \n      \n    </Card.Body>\n    <Card.Footer>\n      <small >Last updated {lastupdated}</small>\n    </Card.Footer>\n  </Card>\n</CardDeck>\n<br/>\n<Form>\n  <Form.Group controlId=\"formGroupSearch\">\n    <Form.Control\n     type=\"text\" \n     placeholder=\"Search a Country\" \n     onChange={ e => setSearchCountries(e.target.value)}\n     style={{width:\"50%\", margin:\"0 auto\"}}\n\n     />\n  </Form.Group>\n  \n</Form>\n<Columns queries={queries}  >{countires}</Columns>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}